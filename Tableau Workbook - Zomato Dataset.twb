<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='zomato' inline='true' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='zomato' name='textscan.08ykuvq00zczvi108n8xe0k7w8zd'>
            <connection class='textscan' directory='C:/Users/vaibhav/Desktop/work/Python IMPORTANT/Natural Language Processing/Zomato Data Set' filename='zomato.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08ykuvq00zczvi108n8xe0k7w8zd' name='zomato.csv' table='[zomato#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='url' ordinal='0' />
            <column datatype='string' name='address' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='string' name='online_order' ordinal='3' />
            <column datatype='string' name='book_table' ordinal='4' />
            <column datatype='string' name='rate' ordinal='5' />
            <column datatype='integer' name='votes' ordinal='6' />
            <column datatype='string' name='phone' ordinal='7' />
            <column datatype='string' name='location' ordinal='8' />
            <column datatype='string' name='rest_type' ordinal='9' />
            <column datatype='string' name='dish_liked' ordinal='10' />
            <column datatype='string' name='cuisines' ordinal='11' />
            <column datatype='integer' name='approx_cost(for two people)' ordinal='12' />
            <column datatype='string' name='reviews_list' ordinal='13' />
            <column datatype='string' name='menu_item' ordinal='14' />
            <column datatype='string' name='listed_in(type)' ordinal='15' />
            <column datatype='string' name='listed_in(city)' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>online_order</remote-name>
            <remote-type>129</remote-type>
            <local-name>[online_order]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>online_order</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>book_table</remote-name>
            <remote-type>129</remote-type>
            <local-name>[book_table]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>book_table</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rate]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rest_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rest_type]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>rest_type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dish_liked</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dish_liked]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>dish_liked</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuisines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cuisines]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>cuisines</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>approx_cost(for two people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[approx_cost(for two people)]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>approx_cost(for two people)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reviews_list]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>reviews_list</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>menu_item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[menu_item]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>menu_item</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in(type)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listed_in(type)]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>listed_in(type)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in(city)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listed_in(city)]</local-name>
            <parent-name>[zomato.csv]</parent-name>
            <remote-alias>listed_in(city)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Resturants' datatype='integer' name='[Calculation_1255378431049732096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([name])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
      <column caption='cuisines - Split 1' datatype='string' name='[cuisines - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cuisines]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [cuisines], &quot;,&quot;, 1 ) )' />
      </column>
      <column datatype='string' name='[listed_in(city)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='rating' datatype='real' name='[rate - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rate]'>
        <calculation class='tableau' formula='FLOAT( SPLIT( [rate], &quot;/&quot;, 1 ) )' />
      </column>
      <column caption='resturant_type ' datatype='string' name='[rest_type - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rest_type]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [rest_type], &quot;,&quot;, 1 ) )' />
      </column>
      <column datatype='string' name='[url]' role='dimension' type='nominal' />
      <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
      <column-instance column='[rate - Split 1]' derivation='Avg' name='[avg:rate - Split 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[url]' derivation='Count' name='[cnt:url:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rate - Split 1]' derivation='CountD' name='[ctd:rate - Split 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rate - Split 1]' derivation='Max' name='[max:rate - Split 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[listed_in(city)]' derivation='None' name='[none:listed_in(city):nk]' pivot='key' type='nominal' />
      <column-instance column='[rest_type - Split 1]' derivation='None' name='[none:rest_type - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[rate - Split 1]' derivation='Sum' name='[sum:rate - Split 1:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.701149' measure-ordering='alphabetic' measure-percentage='0.298851' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:listed_in(city):nk]' palette='tableau-10' type='palette'>
            <map to='#00557f'>
              <bucket>&quot;BTM&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Whitefield&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brigade Road&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Frazer Town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Electronic City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sarjapur Road&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Banashankari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New BEL Road&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jayanagar&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Old Airport Road&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Malleshwaram&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brookefield&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lavelle Road&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Koramangala 6th Block&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bannerghatta Road&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Koramangala 4th Block&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rajajinagar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JP Nagar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Residency Road&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kalyan Nagar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Koramangala 5th Block&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Indiranagar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Koramangala 7th Block&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HSR&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;MG Road&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basavanagudi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marathahalli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kammanahalli&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Church Street&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bellandur&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cnt:url:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[ctd:rate - Split 1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[max:rate - Split 1:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[sum:rate - Split 1:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:rest_type - Split 1:nk]' palette='superfishel_stone_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Bhojanalya&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Food Truck&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Dessert Parlor&quot;</bucket>
            </map>
            <map to='#6388b4'>
              <bucket>&quot;Pub&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Delivery&quot;</bucket>
            </map>
            <map to='#767676'>
              <bucket>&quot;Pop Up&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Food Court&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Takeaway&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Beverage Shop&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Confectionery&quot;</bucket>
            </map>
            <map to='#a9b5ae'>
              <bucket>&quot;Microbrewery&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Club&quot;</bucket>
            </map>
            <map to='#baa094'>
              <bucket>&quot;Mess&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Casual Dining&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Lounge&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Cafe&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Kiosk&quot;</bucket>
            </map>
            <map to='#ed97ca'>
              <bucket>&quot;Bakery&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Bar&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Fine Dining&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Sweet Shop&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Dhaba&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Quick Bites&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Category of resturant vs Avg cost'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#333333' fontsize='10'>Approx_cost(for two people) for each listed_in(type).  Colour shows details about listed_in(city). The data is filtered on average of approx_cost(for two people), which includes values less than or equal to 5,000. The view is filtered on average of rating, which ranges from 4.3000 to 4.9000.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Attribute' name='[attr:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[phone]' derivation='Attribute' name='[attr:phone:nk]' pivot='key' type='nominal' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[rate - Split 1]' derivation='Avg' name='[avg:rate - Split 1:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[listed_in(city)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[listed_in(type)]' role='dimension' type='nominal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[approx_cost(for two people)]' derivation='None' name='[none:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[listed_in(city)]' derivation='None' name='[none:listed_in(city):nk]' pivot='key' type='nominal' />
            <column-instance column='[listed_in(type)]' derivation='None' name='[none:listed_in(type):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[phone]' role='dimension' type='nominal' />
            <column caption='rating' datatype='real' name='[rate - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rate]'>
              <calculation class='tableau' formula='FLOAT( SPLIT( [rate], &quot;/&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rate]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' included-values='in-range'>
            <max>5000.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' included-values='in-range'>
            <min>4.2999999999999998</min>
            <max>4.9000000000000004</max>
          </filter>
          <slices>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]</column>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:approx_cost(for two people):qk]' value='c&quot;₹ &quot;#,##0.00;&quot;₹ &quot;-#,##0.00' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]' />
              <tooltip column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' />
              <tooltip column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[attr:name:nk]' />
              <tooltip column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[attr:location:nk]' />
              <tooltip column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[attr:phone:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:approx_cost(for two people):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:approx_cost(for two people):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:approx_cost(for two people):qk]</rows>
        <cols>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(type):nk]</cols>
      </table>
      <simple-id uuid='{FE1C50DF-ECD8-40F2-8A19-B5821DDF2CE9}' />
    </worksheet>
    <worksheet name='Cuisins vs cost vs rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Location vs Avg cost</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontsize='11'>Average of approx_cost(for two people) for each listed_in(city).  Colour shows average of votes.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Avg' name='[avg:votes:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[listed_in(city)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[listed_in(city)]' derivation='None' name='[none:listed_in(city):nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]' value='7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' value='c&quot;₹ &quot;#,##0.00;&quot;₹ &quot;-#,##0.00' />
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]' value='7' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]</rows>
        <cols>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</cols>
      </table>
      <simple-id uuid='{27F17FAB-FC15-4CA0-B74C-CB5E1A87F4C3}' />
    </worksheet>
    <worksheet name='Most offered cuisines'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Most offered cuizines</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#555555' fontsize='10'>Count of cuisines - Split 1 for each cuisines - Split 1.  Colour shows average of approx_cost(for two people).  The marks are labelled by average of approx_cost(for two people). The view is filtered on cuisines - Split 1, which has multiple members selected.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[cuisines - Split 1]' derivation='Count' name='[cnt:cuisines - Split 1:qk]' pivot='key' type='quantitative' />
            <column caption='cuisines - Split 1' datatype='string' name='[cuisines - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cuisines]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [cuisines], &quot;,&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[cuisines]' role='dimension' type='nominal' />
            <column-instance column='[cuisines - Split 1]' derivation='None' name='[none:cuisines - Split 1:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([cuisines - Split 1])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:cuisines - Split 1:nk]' />
                  <groupfilter function='member' level='[none:cuisines - Split 1:nk]' member='&quot;Cafe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cnt:cuisines - Split 1:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cnt:cuisines - Split 1:qk]' scope='cols' value='Count of cuisines ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]' value='normal' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]' value='bold' />
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='500.0' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>Cost: &lt;</run>
                <run bold='true'>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]</rows>
        <cols>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[cnt:cuisines - Split 1:qk]</cols>
      </table>
      <simple-id uuid='{5E72F8F7-2F6B-4B3E-8BC0-7CD36C7F884D}' />
    </worksheet>
    <worksheet name='Number of each type of Restaurants'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; vs Avg Cost</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column caption='Number of Resturants' datatype='integer' name='[Calculation_1255378431049732096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([name])' />
            </column>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[rest_type - Split 1]' derivation='None' name='[none:rest_type - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='resturant_type ' datatype='string' name='[rest_type - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rest_type]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [rest_type], &quot;,&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rest_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1255378431049732096]' derivation='User' name='[usr:Calculation_1255378431049732096:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' included-values='in-range'>
            <min>7</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' scope='cols' value='Number of Resturants in bengaluru' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='800.0' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</rows>
        <cols>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]</cols>
      </table>
      <simple-id uuid='{CCE028E6-F0E4-448B-A162-37B0E9E9D21D}' />
    </worksheet>
    <worksheet name='Online Order'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Online order</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontsize='10'>Online_order and Number of Resturants.  Colour shows average of votes.  Size shows average of votes.  The marks are labelled by online_order and Number of Resturants.</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='11'>Clearly Zomato still has a lot of potential restaurants who can come aboard its app and offer online order service.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column caption='Number of Resturants' datatype='integer' name='[Calculation_1255378431049732096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([name])' />
            </column>
            <column-instance column='[votes]' derivation='Avg' name='[avg:votes:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[online_order]' derivation='None' name='[none:online_order:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[online_order]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1255378431049732096]' derivation='User' name='[usr:Calculation_1255378431049732096:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' value='12' />
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:online_order:nk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' />
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
              <lod column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>Online order Service:</run>
                <run> &lt;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:online_order:nk]&gt;&#10;Number of Restaurants: &lt;[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E881E320-3DCF-4F1E-94EE-8D5D9159A5FE}' />
    </worksheet>
    <worksheet name='Reserved Restaurant'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Can a table be reserved at the Restaurant</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Book_table.  Colour shows average of approx_cost(for two people).  Size shows Number of Resturants.  The marks are labelled by whether the service of reserving a table os availlable at the resturants.&#10;&#10;</run>
            <run bold='true' fontcolor='#333333' fontsize='10'>We can clearly see that majority of restaurants don&apos;t have this service and those that do have this service, their avg cost is very high relative to those that don&apos;t.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column caption='Number of Resturants' datatype='integer' name='[Calculation_1255378431049732096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([name])' />
            </column>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[book_table]' role='dimension' type='nominal' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[book_table]' derivation='None' name='[none:book_table:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1255378431049732096]' derivation='User' name='[usr:Calculation_1255378431049732096:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]' value='normal' />
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]' value='bold' />
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]' value='15' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]' />
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E4485F36-113D-44F1-BC94-027D7B8AC135}' />
    </worksheet>
    <worksheet name='Restaurant type vs Avg cost'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; vs Rating</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[rate - Split 1]' derivation='Avg' name='[avg:rate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rest_type - Split 1]' derivation='None' name='[none:rest_type - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='rating' datatype='real' name='[rate - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rate]'>
              <calculation class='tableau' formula='FLOAT( SPLIT( [rate], &quot;/&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rate]' role='dimension' type='nominal' />
            <column caption='resturant_type ' datatype='string' name='[rest_type - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rest_type]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [rest_type], &quot;,&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rest_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Bakery&quot;' function='range' level='[none:rest_type - Split 1:nk]' to='&quot;Confectionery&quot;' />
              <groupfilter from='&quot;Dessert Parlor&quot;' function='range' level='[none:rest_type - Split 1:nk]' to='&quot;Takeaway&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' value='c&quot;₹ &quot;#,##0.00;&quot;₹ &quot;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='3.7999999999999998' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</rows>
        <cols>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</cols>
      </table>
      <simple-id uuid='{BC9A8849-8AA1-419B-A18C-BF171CF2D993}' />
    </worksheet>
    <worksheet name='Top 15 Restaurants in Bengaluru'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#555555'>The trends of average of approx_cost(for two people)(represented by bars) and average of votes(reliablitly) for name(represented by orange line chart).  For pane Average of approx_cost(for two people):  Colour shows average of rating. The data is filtered on sum of votes, which includes everything. The view is filtered on average of approx_cost(for two people), average of rating and average of votes. The average of approx_cost(for two people) filter ranges from ₹ 500.00 to ₹ 2,000.00. The average of rating filter ranges from 4.5000 to 4.9000. The average of votes filter ranges from 4,000 to 16,589</run>
            <run fontcolor='#555555' fontsize='10'>.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#555555' fontsize='11'>In the above graphic, </run>
            <run bold='true' fontcolor='#000000' fontsize='11'>the Byg Brewski Brewing Comapny</run>
            <run fontcolor='#555555' fontsize='11'> comes out to be clear winner according to our filters due to its </run>
            <run bold='true' fontcolor='#333333' fontsize='11'>moderate avg cost</run>
            <run fontcolor='#555555' fontsize='11'>, </run>
            <run bold='true' fontcolor='#333333' fontsize='11'>large number of avg votes (high reliability)</run>
            <run fontcolor='#555555' fontsize='11'> and </run>
            <run bold='true' fontcolor='#333333' fontsize='11'>high avg rating (better qulaity)</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column datatype='integer' name='[approx_cost(for two people)]' role='measure' type='quantitative' />
            <column-instance column='[approx_cost(for two people)]' derivation='Avg' name='[avg:approx_cost(for two people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[rate - Split 1]' derivation='Avg' name='[avg:rate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[votes]' derivation='Avg' name='[avg:votes:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='rating' datatype='real' name='[rate - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rate]'>
              <calculation class='tableau' formula='FLOAT( SPLIT( [rate], &quot;/&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rate]' role='dimension' type='nominal' />
            <column-instance column='[votes]' derivation='Sum' name='[sum:votes:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[votes]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' included-values='in-range'>
            <min>500.0</min>
            <max>2000.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' included-values='in-range'>
            <min>4.5</min>
            <max>4.9000000000000004</max>
          </filter>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' included-values='in-range'>
            <min>4000.0</min>
            <max>16588.5</max>
          </filter>
          <filter class='quantitative' column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[sum:votes:qk]' included-values='in-range' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</column>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]</column>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]</column>
            <column>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[sum:votes:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' value='c&quot;₹ &quot;#,##0.00;&quot;₹ &quot;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:name:nk]</rows>
        <cols>([federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk] + [federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk])</cols>
      </table>
      <simple-id uuid='{0EF7329E-2CB9-498A-8683-0FDBCDB49AF6}' />
    </worksheet>
    <worksheet name='Types of resturants in bengaluru'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Types of Resturants in Bengaluru</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='zomato' name='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa' />
          </datasources>
          <datasource-dependencies datasource='federated.0ar8tlm0xsg6bh18jsbco0r3kyqa'>
            <column caption='Number of Resturants' datatype='integer' name='[Calculation_1255378431049732096]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([name])' />
            </column>
            <column datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[rest_type - Split 1]' derivation='None' name='[none:rest_type - Split 1:nk]' pivot='key' type='nominal' />
            <column caption='resturant_type ' datatype='string' name='[rest_type - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[rest_type]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [rest_type], &quot;,&quot;, 1 ) )' />
            </column>
            <column datatype='string' name='[rest_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1255378431049732096]' derivation='User' name='[usr:Calculation_1255378431049732096:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' value='10' />
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' />
              <size column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[usr:Calculation_1255378431049732096:qk]' />
              <text column='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{00CA5218-710F-4BAC-BDB2-D16FC494829A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Types of resturants in bengaluru'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93942F09-2649-4778-85CA-8C3B1E98D378}' />
    </window>
    <window class='worksheet' name='Number of each type of Restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(type):nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA82B751-5E0C-408C-B421-C1D28B959C33}' />
    </window>
    <window class='worksheet' name='Restaurant type vs Avg cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9F8E42F-C124-46B6-9539-7A3DF5DBFA25}' />
    </window>
    <window class='worksheet' name='Top 15 Restaurants in Bengaluru'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='98'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C305E561-24BC-41DA-937C-5733ADEA7D2F}' />
    </window>
    <window class='worksheet' name='Category of resturant vs Avg cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(type):nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:location:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:name:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:phone:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:rest_type - Split 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26DD6F4B-D9AC-48F6-8C91-47DB32E598BF}' />
    </window>
    <window class='worksheet' name='Cuisins vs cost vs rating'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='104'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[sum:rate - Split 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D66ECBF6-F531-44CC-B38F-913EF1C8CAA3}' />
    </window>
    <window class='worksheet' name='Most offered cuisines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:rate - Split 1:qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines - Split 1:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:cuisines:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:dish_liked:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:menu_item:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBEFDDFB-E945-4E28-9F1D-1B34E6FF6C05}' />
    </window>
    <window class='worksheet' name='Online Order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:votes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC7C48E6-0029-4CD1-930C-DF4098D672CA}' />
    </window>
    <window class='worksheet' maximized='true' name='Reserved Restaurant'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[avg:approx_cost(for two people):qk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:book_table:nk]</field>
            <field>[federated.0ar8tlm0xsg6bh18jsbco0r3kyqa].[none:listed_in(city):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F98A925F-F5AB-4582-9E1B-7254F283043C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category of resturant vs Avg cost' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cuisins vs cost vs rating' width='192'>
      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
      wpuk0/HcA0wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Most offered cuisines' width='192'>
      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
      yUcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of each type of Restaurants' width='192'>
      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
      x5r/DwbpS47vNkvRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Online Order' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Reserved Restaurant' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Restaurant type vs Avg cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 Restaurants in Bengaluru' width='192'>
      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
      +T8hduCdgKxSQAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Types of resturants in bengaluru' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
